apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-sri-clusrole
rules:
- apiGroups: [""]
  resources:
#  - "*"
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  - secrets
  - pods/log
  - configmaps
  - deployments
  - jobs
  verbs: ["get", "list", "watch"]

## Rather than referring to individual resources, apiGroups, and verbs, you can use the wildcard * symbol to refer to all such objects. For nonResourceURLs, you can use the wildcard * as a suffix glob match. For resourceNames, an empty set means that everything is allowed. Here is an example that allows access to perform any current and future action on all current and future resources in the example.com API group. This is similar to the built-in cluster-admin role.
## 

- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/healthz", "/livez", "/readyz"]
  verbs: ["get"]

## Allows read access to control-plane monitoring endpoints (i.e. kube-apiserver liveness and readiness endpoints (/healthz, /livez, /readyz), the individual health-check endpoints (/healthz/*, /livez/*, /readyz/*), and /metrics). Note that individual health check endpoints and the metric endpoint may expose sensitive information.

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-sri-clusrolebind
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-sri-clusrole
subjects:
- kind: ServiceAccount
#  name: prometheus-sri-sa
  name: default
  namespace: default
